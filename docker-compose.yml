version: '3'

networks:
  poll-tier:
  back-tier:
  result-tier:

volumes:
  db-data:

services:
  poll:
    build: ./poll
    image: poll
    ports:
      - 5000:80
    environment:
      - REDIS_HOST=redis
    networks:
      - poll-tier
    depends_on:
      redis:
        condition: service_started
    restart: always

  redis:
    image: "redis:7"
    ports:
      - 6379
    networks:
      - poll-tier
      - back-tier
    restart: always

  worker:
    build: ./worker
    image: worker
    ports:
      - 8080:8080
    environment:
      - REDIS_HOST=redis
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
      - POSTGRES_DB=mydb
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
    networks:
      - back-tier
    depends_on:
      db:
        condition: service_started
      redis:
        condition: service_started
    restart: always

  db:
    image: "postgres:16"
    environment:
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
      - POSTGRES_DB=mydb
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
    volumes:
      - db-data:/var/lib/postgresql/data
      - ./schema.sql:/docker-entrypoint-initdb.d/schema.sql
    networks:
      - result-tier
      - back-tier
    restart: always

  result:
    build: ./result
    image: result
    ports:
      - 5001:80
    environment:
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
      - POSTGRES_DB=mydb
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
    networks:
      - result-tier
    depends_on:
      db:
        condition: service_started
    restart: always
